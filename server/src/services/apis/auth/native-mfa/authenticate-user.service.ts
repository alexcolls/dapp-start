// import { Client } from "pg";
// import { sqlDBs } from "../../../app";
// import { uidVerifierCtrl } from "../../../controllers/sql/__auths__.controller";
// import {
//   AuthState,
//   AuthConnection,
//   AuthControls,
// } from "../../controllers/sql/schemas/__auths__.tables";

// export async function authenticateUser(
//   uid: string, // user's id (username, email or token)
//   verifications: string[][], // [tokens, emails, phones, pubkeys, oauths, netowork & devices ips]
//   ukey?: string, // user's autogenerated password (555 bits)
//   recovryToken?: string, // unique user's recovery token (1024 bits)
//   _db: Promise<Client> = sqlDBs.auths // db client connection.
// ): Promise<boolean> {
//   if (!(await uidVerifierCtrl(await _db, uid))) return false; // uid does not exists.
//   for (let i = 0; i < verifications.length; i++) {
//     for (let j = 0; j < verifications[i].length; j++) {
//       console.log(i, j, verifications[i][j]);
//     }
//   }

//   return true;
// }
